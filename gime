#!/usr/bin/env bash

# Copyright 2021 Miguel Silva
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


### DEFAULT PROGRAM ARGUMENTS ###
KEYWORD=""
DATA=""
LABEL=""
SEP1="="
SEP2="="
SAVE=false
STRING_CASE=""
ALL=false
CONTAINS_LABEL=false
CONTAINS_KEYWORD=false
DISPLAY_MODE=""
DB_PATH=/var/gime/data.db

### USAGE & PROGRAM ARGUMENTS PARSING ###
_usage() {
    printf "$1"
cat << EOF
Usage: gime <command> [flags] - Display/Store/Delete data associated with a label.
Available Commands & Flags
help                    Help about any command
save <LABEL> <DATA>     Save <DATA> along with <LABEL>
[LABEL]                 Display mode (label not mandatory)
    <LABEL>                         Display data associated with <LABEL>
    -a      --all                   Display all data
    -c      --contains <KEYWORD>    Display if data contains <KEYWORD>
    -cl     --contains-label        Display if data contains <LABEL>
    -i      --insensitive           Set case insensitive
delete [LABEL]          Delete mode (label not mandatory)
    <LABEL>                         Delete data associated with <LABEL>
    -a      --all                   Delete all data
    -c      --contains <KEYWORD>    Delete if data contains <KEYWORD>
    -cl     --contains-label        Delete if data contains <LABEL>
    -i      --insensitive           Set case insensitive
check-for-update        Check if program has any update available
update                  Updade program
uninstall               Uninstall program
EOF
    exit
}

### Functions ###
_uninstall() {
    curl -sL https://raw.githubusercontent.com/silvagpmiguel/gime/main/uninstall | sudo bash
    exit
}

_update() {
    curl -sL https://raw.githubusercontent.com/silvagpmiguel/gime/main/install | sudo bash
    exit
}

_check_update() {
    curl -sL https://raw.githubusercontent.com/silvagpmiguel/gime/main/check-update | sudo bash
    exit
}

### Program Arguments Parsing ###
[[ "$#" == "0" ]] && _usage
while :; do
    case "$1" in
        help)
            [[ $DISPLAY_MODE == "" ]] && _usage || LABEL="$1"
        ;;
        delete)
            [[ $DISPLAY_MODE == "" ]] && DISPLAY_MODE=false || LABEL="$1"
        ;;
        save)
            if [[ "$DISPLAY_MODE" == "" ]]; then
                if [[ "$2" != "" && "$3" != "" ]]; then
                    LABEL=$(echo "$2")
                    DATA=$(echo "$3")
                    sqlite3 -batch "${DB_PATH}" "insert into saved_data values('${LABEL}','${DATA}')"
                    exit
                else
                    _usage "Wrong usage.\n"
                fi
            else
                LABEL="$1"
            fi
        ;;
        check-for-update)
            [[ $DISPLAY_MODE == "" ]] && _check_update || LABEL="$1" 
        ;;
        update)
            [[ $DISPLAY_MODE == "" ]] && _update || LABEL="$1"
        ;;
        uninstall)
            [[ $DISPLAY_MODE == "" ]] && _uninstall || LABEL="$1"
        ;;
        -a|--all)
            ALL=true; shift "$#"
        ;;
        -c|--contains)
            [[ "$2" != "" ]] && CONTAINS_KEYWORD=true; KEYWORD="%$(echo "$2")%"; SEP1=" like "; shift || _usage "Wrong usage.\n"
        ;;
        -cl|--contains-label)
            CONTAINS_LABEL=true; SEP2=" like "
        ;;
        -i|--insensitive)
            STRING_CASE="collate nocase"
        ;;
        ?*)
            LABEL="$1"
        ;;
        "")
            [[ "$DISPLAY_MODE" == "" ]] && DISPLAY_MODE=true; break || break
        ;;
        *)
            _usage "Wrong usage.\n"
        ;;
    esac
    shift
done

### MAIN PROGRAM ###
if "$CONTAINS_LABEL"; then
    LABEL="%${LABEL}%"
fi
if "$DISPLAY_MODE"; then
    if "$ALL"; then
        sqlite3 -batch "${DB_PATH}" "select * from saved_data" && exit
    elif [[ "$KEYWORD" != "" && "$LABEL" != "" ]]; then
        sqlite3 -batch "${DB_PATH}" "select data from saved_data where data${SEP1}'${KEYWORD}' ${STRING_CASE} and label${SEP2}'${LABEL}' ${STRING_CASE}"
    elif [[ "$LABEL" != "" ]]; then
        sqlite3 -batch "${DB_PATH}" "select data from saved_data where label${SEP2}'${LABEL}' ${STRING_CASE}"
    else
        sqlite3 -batch "${DB_PATH}" "select data from saved_data where data${SEP1}'${KEYWORD}' ${STRING_CASE}"
    fi
else
    if "$ALL"; then
        sqlite3 -batch "${DB_PATH}" "delete from saved_data" && exit
    elif [[ "$KEYWORD" != "" && "$LABEL" != "" ]]; then
        sqlite3 -batch "${DB_PATH}" "delete from saved_data where data${SEP1}'${KEYWORD}' and label${SEP2}'${LABEL}'"
    elif [[ "$LABEL" != "" ]]; then
        sqlite3 -batch "${DB_PATH}" "delete from saved_data where label${SEP2}'${LABEL}'"
    else
        echo "sqlite3 -batch ${DB_PATH} delete from saved_data where data${SEP1}'${KEYWORD}'"
        sqlite3 -batch "${DB_PATH}" "delete from saved_data where data${SEP1}'${KEYWORD}'"
    fi
fi